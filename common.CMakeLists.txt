####################################################################
# CMake common setting.
# 
# Project independent setting.
#
# Optional Variables:
#
# SET(GENERATE_DOXYFILE TRUE)
#       Generate doxyfile from doxyfile.in
#
# SET(ENABLE_GTKDOC TRUE)
# SET(GTKDOC_OUTPUT_DIR <path>)
#       Enable gtk-doc
#
# SET(GENERATE_UPLOADPKG_BATCH TRUE) 
#        Generate UploadPkg.batch for Uploading to hosting host
# 
####################################################################

ADD_DEFINITIONS(-DPROJECT_NAME='"${PROJECT_NAME}"')


SET(PROJECT_DATADIR "${datadir}/${PROJECT_NAME}")
SET(PROJECT_DOCDIR "${docdir}/${PROJECT_NAME}-${PRJ_VER}")

SET(DEVELOPER_SETTING_FILE "DEVELOPER_SETTING")

#====================================================================
#  Developer can edit a DEVELOPER_SETTING file, 
#  which defines the developer specific information,
#  So they can upload to hosting service provider.
#
#  DEVELOPER_SETTING format
#  SSH_USER=<user_name>
#  SSH_ARGS=<additional args>
#  KOJI_CVS_PATH=<path for koji CVS>
#
#  KOJI_CVS_PATH is for Fedora/EPEL users, it has no effect on other systems.
#

IF(EXISTS ${DEVELOPER_SETTING_FILE})
    EXECUTE_PROCESS(COMMAND  grep SSH_USER ${DEVELOPER_SETTING_FILE}
	    COMMAND sed -e "s/SSH_USER=//"
	    COMMAND tr \\n \\t
	    COMMAND sed  -e s/\\t//
	    OUTPUT_VARIABLE SSH_USER
    )

    EXECUTE_PROCESS(COMMAND  grep SSH_ARGS ${DEVELOPER_SETTING_FILE}
	    COMMAND sed -e "s/SSH_ARGS=//"
	    COMMAND tr \\n \\t
	    COMMAND sed  -e s/\\t//
	    OUTPUT_VARIABLE SSH_ARGS
	    RESULT_VARIABLE NO_SSH_ARGS
    )
    
    IF(NOT ${NO_SSH_ARGS})
	IF ("${SSH_ARGS}" STREQUAL "")
	    SET(SFTP_SSH_ARGS "")
	ELSE ()
	    SET(SFTP_SSH_ARGS -F ${SSH_ARGS})
	ENDIF ()
    ELSE()
	SET(SFTP_SSH_ARGS "")
    ENDIF()

    EXECUTE_PROCESS(COMMAND  grep KOJI_CVS_PATH ${DEVELOPER_SETTING_FILE}
	COMMAND sed -e "s/KOJI_CVS_PATH=//"
	COMMAND tr \\n \\t
	COMMAND sed  -e s/\\t//
	OUTPUT_VARIABLE KOJI_CVS_PATH
	RESULT_VARIABLE NO_KOJI_CVS_PATH
    )

    IF(NOT DEFINED KOJI_CVS_PATH)
	SET(KOJI_CVS_PATH "./")
    ELSEIF (KOJI_CVS_PATH STREQUAL "")
	SET(KOJI_CVS_PATH "./")
    ENDIF()
ENDIF(EXISTS  ${DEVELOPER_SETTING_FILE})

#==================================================================
# Configure files
#

IF (GENERATE_DOXYFILE)
    CONFIGURE_FILE(Doxyfile.in Doxyfile)
ENDIF()

IF (GENERATE_UPLOADPKG_BATCH)
    CONFIGURE_FILE(UploadPkg.batch.in UploadPkg.batch)
ENDIF()

#==================================================================
# Make uninstall
#
CONFIGURE_FILE(
    "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
    IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
    "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
    )


#====================================================================
# Package handling
#

SET(CPACK_PACKAGE_VERSION ${PRJ_VER})
SET(SOURCE_TARBALL_OUTPUT_DIR "${CMAKE_BINARY_DIR}/SOURCES")
SET(MY_IGNORE_FILES '/DEVELOPER_SETTING$')
SET(CPACK_PACKAGE_IGNORE_FILES ${MY_IGNORE_FILES})
SET(CPACK_SOURCE_IGNORE_FILES ${MY_IGNORE_FILES})

IF(EXISTS ${DEVELOPER_SETTING_FILE})
    INCLUDE(FedoraDeveloper)
 ELSE(EXISTS ${DEVELOPER_SETTING_FILE})
    INCLUDE(RPM)
ENDIF(EXISTS ${DEVELOPER_SETTING_FILE})

#====================================================================
# Document generation
#
IF (EXISTS Doxyfile)
    FIND_PACKAGE(Doxygen)
    ADD_CUSTOM_TARGET(doxygen    
	    COMMAND "${DOXYGEN}" "Doxyfile"
	    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
    )
    INSTALL(DIRECTORY doc/html
	DESTINATION "${docdir}/${PROJECT_NAME}-${PRJ_VER}"
    )
ENDIF()


#====================================================================
# Upload the package releases to hosting service provider (Source forge).
#

IF(EXISTS UploadPkg.batch)
    IF(DEFINED ${SSH_USER})
        SET(UPLOAD_SITE frs.sourceforge.net)
        SET(HOSTING_SERVICE_PROVIDER "Source forge")
        ADD_CUSTOM_TARGET(upload_pkg_release
	    COMMAND sftp -b UploadPkg.batch ${SFTP_SSH_ARGS} ${SSH_USER}@${UPLOAD_SITE}
	    DEPENDS ${DEVELOPER_SETTING_FILE} UploadPkg.batch.in
	    COMMENT "Uploading the package releases to ${HOSTING_SERVICE_PROVIDER}..."
	)
    ENDIF()
ENDIF()

